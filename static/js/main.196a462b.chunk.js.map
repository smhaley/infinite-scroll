{"version":3,"sources":["graphql.svg","App.styled.tsx","components/CharacterList.styled.tsx","components/CharacterList.tsx","apollo.ts","App.tsx","hooks.tsx","reportWebVitals.ts","index.tsx"],"names":["_path","Nav","styled","nav","NavLogo","div","NavSource","Heading","ContentContainer","section","FooterDiv","CardContainer","RickContainer","Card","CharacterList","networkStatus","data","useState","counter","setCounter","lenRef","useRef","handleShow","current","characters","results","length","map","val","index","style","display","onLoad","src","image","alt","name","status","location","id","cache","InMemoryCache","typePolicies","Query","fields","keyArgs","merge","existing","incoming","result","Character","read","toUpperCase","GET_CHARACTERS","gql","_extends","Object","assign","target","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgGraphql","_ref","svgRef","title","titleId","props","role","viewBox","xmlns","ref","undefined","d","ForwardRef","content","logo","href","rel","stack","head","footer","done","more","App","stop","setStop","entry","elementRef","threshold","root","rootMargin","freezeOnceVisible","setEntry","frozen","isIntersecting","updateEntry","useEffect","node","window","IntersectionObserver","observer","observe","disconnect","useIntersectionObserver","isVisible","useQuery","variables","page","notifyOnNetworkStatusChange","loading","fetchMore","isRefetching","getMore","useCallback","next","info","item","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","client","ApolloClient","uri","ReactDOM","render","ApolloProvider","document","getElementById"],"mappings":"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","file":"static/js/main.196a462b.chunk.js","sourcesContent":["var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgGraphql(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    role: \"img\",\n    viewBox: \"0 0 24 24\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"GraphQL\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14.051 2.751l4.935 2.85c.816-.859 2.173-.893 3.032-.077.148.14.274.301.377.477.589 1.028.232 2.339-.796 2.928-.174.1-.361.175-.558.223v5.699c1.146.273 1.854 1.423 1.58 2.569-.048.204-.127.4-.232.581-.592 1.023-1.901 1.374-2.927.782-.196-.113-.375-.259-.526-.429l-4.905 2.832c.372 1.124-.238 2.335-1.361 2.706-.217.071-.442.108-.67.108-1.181.001-2.139-.955-2.14-2.136 0-.205.029-.41.088-.609l-4.936-2.847c-.816.854-2.171.887-3.026.07-.854-.816-.886-2.171-.07-3.026.283-.297.646-.506 1.044-.603l.001-5.699c-1.15-.276-1.858-1.433-1.581-2.584.047-.198.123-.389.224-.566.592-1.024 1.902-1.374 2.927-.782.177.101.339.228.48.377l4.938-2.85C9.613 1.612 10.26.423 11.39.088 11.587.029 11.794 0 12 0c1.181-.001 2.139.954 2.14 2.134.001.209-.03.418-.089.617zm-.515.877c-.019.021-.037.039-.058.058l6.461 11.19c.026-.009.056-.016.082-.023V9.146c-1.145-.283-1.842-1.442-1.558-2.588.006-.024.012-.049.019-.072l-4.946-2.858zm-3.015.059l-.06-.06-4.946 2.852c.327 1.135-.327 2.318-1.461 2.645-.026.008-.051.014-.076.021v5.708l.084.023 6.461-11.19-.002.001zm2.076.507c-.39.112-.803.112-1.192 0l-6.46 11.189c.294.283.502.645.6 1.041h12.911c.097-.398.307-.761.603-1.044L12.597 4.194zm.986 16.227l4.913-2.838c-.015-.047-.027-.094-.038-.142H5.542l-.021.083 4.939 2.852c.388-.404.934-.653 1.54-.653.627 0 1.19.269 1.583.698z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgGraphql);\nexport default __webpack_public_path__ + \"static/media/graphql.a5cef630.svg\";\nexport { ForwardRef as ReactComponent };","import styled from \"styled-components\";\n\nexport const Nav = styled.nav`\n  background: linear-gradient(to right, #361999, #78fff1);\n  height: 80px;\n  display: flex;\n  top: 0;\n  justify-content: space-between;\n  z-index: 10;\n  width: 100%;\n  height: 70px;\n  box-shadow: 0 8px 10px -8px rgba(0, 0, 0, 0.3);\n`;\n\nexport const NavLogo = styled.div`\n  color: #78fff1;\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  padding-left: 2rem;\n  height: 100%;\n  font-size: 1.5rem;\n  font-weight: 700;\n  cursor: pointer;\n`;\n\nexport const NavSource = styled.div`\n  align-items: center;\n  display: flex;\n  margin-right: 5%;\n  font-size: 1.2rem;\n  font-weight: 500;\n  color: #361999;\n  text-decoration: none;\n  max-width: 30px;\n`;\n\nexport const Heading = styled.div`\n  margin-top: 50px;\n  padding-left: 5%;\n  font-size: 1.5rem;\n  li {\n    font-size: 1.2rem;\n    font-family: source-code-pro, Menlo, Monaco, Consolas, \"Courier New\",\n      monospace;\n  }\n`;\n\nexport const ContentContainer = styled.section`\n  display: flex;\n  padding: 20px;\n  flex-direction: column;\n  align-items: center;\n  min-height: 100vh;\n`;\n\nexport const FooterDiv = styled.div`\n  margin-top: 1rem;\n  padding: 1rem;\n  position: relative;\n  bottom: 0;\n  left: 0;\n  height: 60px;\n  text-align: center;\n  font-size: 1.5rem;\n  font-weight: 700;\n`;\n","import styled from \"styled-components\";\n\nexport const CardContainer = styled.div`\n  padding: 2px 16px;\n  min-height: 160px;\n`;\n\n\nexport const RickContainer = styled.div`\n  padding: 10px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Card = styled.div`\n  margin: 20px;\n  padding: 10px;\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n  transition: 0.3s;\n  max-width: 250px;\n  &:hover {\n    box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);\n  }\n  img {\n    width: 100%;\n  }\n`;","import React, { useRef, useState } from \"react\";\nimport { CardContainer, RickContainer, Card } from \"./CharacterList.styled\";\nimport { CharacterData } from \"../types\";\n\ninterface Props {\n  networkStatus: number;\n  data: CharacterData | undefined;\n}\n\nconst CharacterList: React.FC<Props> = ({ networkStatus, data }) => {\n  const [counter, setCounter] = useState(0);\n  const lenRef = useRef(0);\n\n  const handleShow = () => {\n    lenRef.current++;\n    data &&\n      lenRef.current === data.characters.results.length &&\n      setCounter(lenRef.current);\n  };\n\n  return (\n    <div>\n      {networkStatus === 1 ? (\n        <p>loading ...</p>\n      ) : (\n        <>\n          <RickContainer>\n            {data &&\n              data.characters.results.map((val, index) => (\n                <Card\n                  key={val.id + val.name + \"card\"}\n                  style={{ display: index < counter ? \"block\" : \"none\" }}\n                >\n                  <img onLoad={handleShow} src={val.image} alt={val.name} />\n                  <CardContainer key={val.id + val.name + \"container\"}>\n                    <h4>\n                      <b>{val.name}</b>\n                    </h4>\n                    <p>\n                      <b>Status:</b> {val.status}\n                    </p>\n                    <p>\n                      <b>Location:</b> {val.location.name}\n                    </p>\n                  </CardContainer>\n                </Card>\n              ))}\n          </RickContainer>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default CharacterList;\n","import { InMemoryCache, gql } from \"@apollo/client\";\n\nexport const cache = new InMemoryCache({\n  typePolicies: {\n    Query: {\n      fields: {\n        characters: {\n          keyArgs: false,\n          merge(existing, incoming) {\n            if (!incoming) return existing;\n            if (!existing) return incoming;\n\n            const { results, ...remainingData } = incoming;\n\n            let result = remainingData;\n            //combines the existing list with the new char list only\n            //pagination index is overwritten by the incoming\n\n            result.results = [...existing.results, ...results];\n\n            return result;\n          },\n        },\n      },\n    },\n    Character: {\n      fields: {\n        name: {\n          read(existing) {\n            return existing.toUpperCase();\n          },\n        },\n      },\n    },\n  },\n});\n\nexport const GET_CHARACTERS = gql`\n  query getChars($page: Int) {\n    characters(page: $page) {\n      info {\n        next\n        pages\n      }\n      results {\n        id\n        name\n        image\n        status\n        location {\n          name\n        }\n      }\n    }\n  }\n`;\n","import React, { useRef, useEffect, useCallback, useState } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { useIntersectionObserver } from \"./hooks\";\nimport {\n  Nav,\n  NavLogo,\n  Heading,\n  ContentContainer,\n  FooterDiv,\n  NavSource,\n} from \"./App.styled\";\nimport CharacterList from \"./components/CharacterList\";\nimport { CharacterData, CharacterVars } from \"./types\";\nimport { GET_CHARACTERS } from \"./apollo\";\nimport { ReactComponent as GraphQL } from \"./graphql.svg\";\n\nconst content = {\n  logo: \"Slick Rick.\",\n  source: (\n    <a\n      href=\"https://rickandmortyapi.com/graphql\"\n      target=\"_blank\"\n      rel=\"noreferrer\"\n    >\n      <GraphQL />\n    </a>\n  ),\n  stack: {\n    head: \"Infinite Scroll using:\",\n    stack: [\"Apollo Client V3\", \"Intersection Observer\"],\n  },\n  footer: {\n    done: \"That's All!\",\n    more: \"There's Still More!\",\n  },\n};\n\nconst App = () => {\n  const [stop, setStop] = useState(false);\n  const ref = useRef<HTMLDivElement | null>(null);\n  const entry = useIntersectionObserver(ref, {});\n  const isVisible = !!entry?.isIntersecting;\n\n  const { loading, data, fetchMore, networkStatus } = useQuery<\n    CharacterData,\n    CharacterVars\n  >(GET_CHARACTERS, {\n    variables: { page: 1 },\n\n    notifyOnNetworkStatusChange: true,\n  });\n\n  const isRefetching = networkStatus === 3;\n\n  const getMore = useCallback(() => {\n    if (data) {\n      const { next } = data.characters.info;\n      if (data && next && !loading && !isRefetching) {\n        fetchMore({\n          variables: { page: next },\n        });\n      } else if (!next) {\n        setStop(true);\n      }\n    }\n  }, [data, loading, fetchMore, isRefetching]);\n\n  useEffect(() => {\n    if (isVisible) {\n      getMore();\n    }\n  }, [isVisible, getMore]);\n\n  return (\n    <>\n      <Nav>\n        <NavLogo>{content.logo}</NavLogo>\n        <NavSource>{content.source}</NavSource>\n      </Nav>\n      <Heading>\n        {content.stack.head}\n        <ul>\n          {content.stack.stack.map((item: string) => (\n            <li key={item}>{item}</li>\n          ))}\n        </ul>\n      </Heading>\n      <ContentContainer>\n        <CharacterList networkStatus={networkStatus} data={data} />\n      </ContentContainer>\n      {stop ? (\n        <FooterDiv>{content.footer.done}</FooterDiv>\n      ) : (\n        <FooterDiv ref={ref}>{content.footer.more}</FooterDiv>\n      )}\n    </>\n  );\n};\n\nexport default App;\n","import { useEffect, useState, RefObject } from \"react\";\n\ninterface Args extends IntersectionObserverInit {\n  freezeOnceVisible?: boolean;\n}\n\nexport function useIntersectionObserver(\n  //from: https://usehooks-typescript.com/react-hook/use-intersection-observer\n  elementRef: RefObject<Element>,\n  {\n    threshold = 0,\n    root = null,\n    rootMargin = \"0%\",\n    freezeOnceVisible = false,\n  }: Args\n): IntersectionObserverEntry | undefined {\n  const [entry, setEntry] = useState<IntersectionObserverEntry>();\n\n  const frozen = entry?.isIntersecting && freezeOnceVisible;\n\n  const updateEntry = ([entry]: IntersectionObserverEntry[]): void => {\n    setEntry(entry);\n  };\n\n  useEffect(() => {\n    const node = elementRef?.current;\n\n    const hasIOSupport = !!window.IntersectionObserver;\n    if (!hasIOSupport || frozen || !node) return;\n    const observerParams = { threshold, root, rootMargin };\n    const observer = new IntersectionObserver(updateEntry, observerParams);\n    observer.observe(node);\n    return () => observer.disconnect();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [elementRef, threshold, root, rootMargin, frozen]);\n\n  return entry;\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ApolloClient, ApolloProvider } from \"@apollo/client\";\nimport { cache } from \"./apollo\";\n\nconst client = new ApolloClient({\n  uri: \"https://rickandmortyapi.com/graphql\",\n  cache: cache,\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}